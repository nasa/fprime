@startuml

participant activeComm order 1
participant deframer order 2
participant buffMgr order 3
participant cmdDisp order 4

activate activeComm

activeComm -> buffMgr: Allocate buffer F
activeComm -> activeComm: Fill F with framed data
activeComm -> deframer: Send F [framedIn]

deframer -> buffMgr: Allocate buffer B [bufferAllocate]
deframer -> deframer: Deframe F into B
deframer -> deframer: Copy B into a command packet C
deframer ->> cmdDisp: Send C [comOut]
deframer -> buffMgr: Deallocate B [bufferDeallocate]
deframer -> buffMgr: Deallocate F [framedDeallocate]

deactivate activeComm

activate cmdDisp
cmdDisp -> deframer: Send cmd response [cmdResponseIn]
deactivate cmdDisp

@enduml
