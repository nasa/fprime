@startuml

participant activeComm order 1
participant deframer order 2
participant buffMgr order 3
participant cmdDisp order 4

activate activeComm

activeComm -> buffMgr: Allocate frame buffer FB
buffMgr --> activeComm: Return FB

activeComm -> activeComm: Fill FB with framed data
activeComm -> deframer: Send FB [framedIn]

deframer -> buffMgr: Allocate packet buffer PB [bufferAllocate]
buffMgr --> deframer: Return PB

deframer -> deframer: Deframe FB into PB
deframer -> deframer: Copy PB into a command packet C
deframer ->> cmdDisp: Send C [comOut]

deframer -> buffMgr: Deallocate PB [bufferDeallocate]
buffMgr --> deframer

deframer -> buffMgr: Deallocate FB [framedDeallocate]
buffMgr --> deframer

deframer --> activeComm

deactivate activeComm

activate cmdDisp
cmdDisp -> deframer: Send cmd response [cmdResponseIn]
deframer --> cmdDisp
deactivate cmdDisp

@enduml
