<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
FileDownlinkComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Svc" name="FileDownlink" kind="active">

  <comment>
  A component for downlinking files
  </comment>

  <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
  <import_port_type>Svc/FileDownlink/SendFileCompletePortAi.xml</import_port_type>
  <import_port_type>Svc/FileDownlink/SendFileRequestPortAi.xml</import_port_type>
  <import_port_type>Svc/Ping/PingPortAi.xml</import_port_type>
  <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>

  <ports>
    <port name="FileComplete" data_type="Svc::SendFileComplete" kind="output" max_number="$FileDownCompletePorts">
      <comment>
      File complete output port
      </comment>
    </port>
    <port name="Run" data_type="Svc::Sched" kind="async_input" max_number="1" full="assert">
      <comment>
      Run input port
      </comment>
    </port>
    <port name="SendFile" data_type="Svc::SendFileRequest" kind="guarded_input" max_number="1">
      <comment>
      Mutexed Sendfile input port
      </comment>
    </port>
    <port name="bufferReturn" data_type="Fw::BufferSend" kind="async_input" max_number="1" full="assert">
      <comment>
      Buffer return input port
      </comment>
    </port>
    <port name="bufferSendOut" data_type="Fw::BufferSend" kind="output" max_number="1">
      <comment>
      Buffer send output port
      </comment>
    </port>
    <port name="cmdIn" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1">
      <comment>
      Command receive port
      </comment>
    </port>
    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1">
      <comment>
      Command registration port
      </comment>
    </port>
    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1">
      <comment>
      Command response port
      </comment>
    </port>
    <port name="eventOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Event port
      </comment>
    </port>
    <port name="pingIn" data_type="Svc::Ping" kind="async_input" max_number="1" full="assert">
      <comment>
      Ping input port
      </comment>
    </port>
    <port name="pingOut" data_type="Svc::Ping" kind="output" max_number="1">
      <comment>
      Ping output port
      </comment>
    </port>
    <port name="textEventOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Text event port
      </comment>
    </port>
    <port name="timeCaller" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Time get port
      </comment>
    </port>
    <port name="tlmOut" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1">
      <comment>
      Telemetry port
      </comment>
    </port>
  </ports>

  <commands>
    <command kind="async" opcode="0x0" mnemonic="SendFile" full="assert">
      <comment>
      Read a named file off the disk. Divide it into packets and send the packets for transmission to the ground.
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The name of the on-board file to send
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The name of the destination file on the ground
          </comment>
        </arg>
      </args>
    </command>
    <command kind="async" opcode="0x1" mnemonic="Cancel" full="assert">
      <comment>
      Cancel the downlink in progress, if any
      </comment>
    </command>
    <command kind="async" opcode="0x2" mnemonic="SendPartial" full="assert">
      <comment>
      Read a named file off the disk from a starting position. Divide it into packets and send the packets for transmission to the ground.
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The name of the on-board file to send
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The name of the destination file on the ground
          </comment>
        </arg>
        <arg name="startOffset" type="U32">
          <comment>
          Starting offset of the source file
          </comment>
        </arg>
        <arg name="length" type="U32">
          <comment>
          Number of bytes to send from starting offset. Length of 0 implies until the end of the file
          </comment>
        </arg>
      </args>
    </command>
  </commands>

  <events>
    <event id="0x0" name="FileOpenError" severity="WARNING_HI" format_string="Could not open file %s">
      <comment>
      An error occurred opening a file
      </comment>
      <args>
        <arg name="fileName" type="string" size="100">
          <comment>
          The name of the file
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x1" name="FileReadError" severity="WARNING_HI" format_string="Could not read file %s with status %d">
      <comment>
      An error occurred reading a file
      </comment>
      <args>
        <arg name="fileName" type="string" size="100">
          <comment>
          The name of the file
          </comment>
        </arg>
        <arg name="status" type="I32">
          <comment>
          The file status of read
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x2" name="FileSent" severity="ACTIVITY_HI" format_string="Sent file %s to file %s">
      <comment>
      The File Downlink component successfully sent a file
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source file name
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The destination file name
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x3" name="DownlinkCanceled" severity="ACTIVITY_HI" format_string="Canceled downlink of file %s to file %s">
      <comment>
      The File Downlink component canceled downlink of a file
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source file name
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The destination file name
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x4" name="DownlinkTimeout" severity="WARNING_HI" format_string="Timeout occurred during downlink of file %s to file %s. Downlink has been canceled.">
      <comment>
      The File Downlink component has detected a timeout. Downlink has been canceled.
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source filename
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The destination file name
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x5" name="DownlinkPartialWarning" severity="WARNING_LO" format_string="Offset %u plus length %u is greater than source size %u for partial downlink of file %s to file %s. ">
      <comment>
      The File Downlink component has detected a timeout. Downlink has been canceled.
      </comment>
      <args>
        <arg name="startOffset" type="U32">
          <comment>
          Starting file offset in bytes
          </comment>
        </arg>
        <arg name="length" type="U32">
          <comment>
          Number of bytes to downlink
          </comment>
        </arg>
        <arg name="filesize" type="U32">
          <comment>
          Size of source file
          </comment>
        </arg>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source filename
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The destination file name
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x6" name="DownlinkPartialFail" severity="WARNING_HI" format_string="Error occurred during partial downlink of file %s to file %s. Offset %u greater than or equal to source filesize %u.">
      <comment>
      The File Downlink component has detected a timeout. Downlink has been canceled.
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source filename
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The destination file name
          </comment>
        </arg>
        <arg name="startOffset" type="U32">
          <comment>
          Starting file offset in bytes
          </comment>
        </arg>
        <arg name="filesize" type="U32">
          <comment>
          Size of source file
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x7" name="SendDataFail" severity="WARNING_HI" format_string="Failed to send data packet from file %s at byte offset %u.">
      <comment>
      The File Downlink component generated an error when trying to send a data packet.
      </comment>
      <args>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source filename
          </comment>
        </arg>
        <arg name="byteOffset" type="U32">
          <comment>
          Byte offset
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x8" name="SendStarted" severity="ACTIVITY_HI" format_string="Downlink of %u bytes started from %s to %s">
      <comment>
      The File Downlink component started a file download.
      </comment>
      <args>
        <arg name="fileSize" type="U32">
          <comment>
          The source file size
          </comment>
        </arg>
        <arg name="sourceFileName" type="string" size="100">
          <comment>
          The source filename
          </comment>
        </arg>
        <arg name="destFileName" type="string" size="100">
          <comment>
          The destination filename
          </comment>
        </arg>
      </args>
    </event>
  </events>

  <telemetry>
    <channel id="0x0" name="FilesSent" data_type="U32" update="always">
      <comment>
      The total number of files sent
      </comment>
    </channel>
    <channel id="0x1" name="PacketsSent" data_type="U32" update="always">
      <comment>
      The total number of packets sent
      </comment>
    </channel>
    <channel id="0x2" name="Warnings" data_type="U32" update="always">
      <comment>
      The total number of warnings
      </comment>
    </channel>
  </telemetry>

</component>
