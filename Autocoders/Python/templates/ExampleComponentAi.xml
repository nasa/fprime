<?xml version="1.0" encoding="UTF-8"?>

<component name="Example" kind="active" namespace="ExampleComponents">
    <import_port_type>Autocoders/Python/templates/ExamplePortAi.xml</import_port_type>
    <import_port_type>Autocoders/Python/templates/AnotherPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
    <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
    <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
    <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
    <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
    <import_port_type>Fw/Prm/PrmGetPortAi.xml</import_port_type>
    <import_port_type>Fw/Prm/PrmSetPortAi.xml</import_port_type>

    <import_serializable_type>Autocoders/Python/templates/Example2SerializableAi.xml</import_serializable_type>

    <include_header>Autocoders/Python/templates/ExampleType.hpp</include_header>

    <comment>An example component</comment>
    <ports>
        <port name="CmdDisp" kind="input" data_type="Fw::Cmd" max_number="1" role="Cmd"/>
        <port name="CmdReg" kind="output" data_type="Fw::CmdReg" max_number="1" role="CmdRegistration"/>
        <port name="CmdStatus" kind="output" data_type="Fw::CmdResponse" max_number="1" role="CmdResponse"/>
        <port name="Time" kind="output" data_type="Fw::Time" max_number="1" role="TimeGet"/>
        <port name="Log" kind="output" data_type="Fw::Log" max_number="1" role="LogEvent"/>
        <port name="LogText" kind="output" data_type="Fw::LogText" max_number="1" role="LogTextEvent"/>
        <port name="Tlm" kind="output" data_type="Fw::Tlm" max_number="1" role="Telemetry"/>
        <port name="ParamGet" kind="output" data_type="Fw::PrmGet" max_number="1" role="ParamGet"/>
        <port name="ParamSet" kind="output" data_type="Fw::PrmSet" max_number="1" role="ParamSet"/>

        <port name="exampleInput" data_type="AnotherExample::Example" kind="async_input" priority="2" max_number="6" full="drop">
            <comment>
            Example input port
            </comment>
        </port>
        <port name="anotherInput" data_type="SomeOtherNamespace::Another" kind="sync_input" max_number="2">
            <comment>
            Example input port
            </comment>
        </port>
        <port name="exampleOutput" data_type="AnotherExample::Example" kind="output" max_number="4">
            <comment>
            Example output port
            </comment>
        </port>
    </ports>

    <commands>
        <command kind="async" opcode="0x100" mnemonic="TEST_CMD_1" priority="1" full="drop">
            <comment>
            A test command
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 command argument</comment>
                </arg>
                <arg name="arg2" type="ENUM">
                    <enum name="CmdEnum">
                        <item name="CMD_MEMB1"/>
                        <item name="CMD_MEMB2" value="7" comment="This member is important"/>
                        <item name="CMD_MEMB3" value="15"/>
                    </enum>
                    <comment>The ENUM argument</comment>
                </arg>
                <arg name="arg3" type="string" size="20">
                    <comment>The string argument</comment>
                </arg>
             </args>
        </command>
        <command kind="sync" opcode="0x101" mnemonic="TEST_CMD_2" >
            <comment>
            A test command
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 command argument</comment>
                </arg>
                <arg name="arg2" type="F32">
                    <comment>A float argument</comment>
                </arg>
             </args>
        </command>
    </commands>
    <telemetry>
        <channel id="100" name="somechan" data_type="U32" abbrev="T0001-1234" update="on_change">
            <comment>
            A test channel
            </comment>
        </channel>
        <channel id="101" name="anotherchan" data_type="Example4::Example2" abbrev="T0001-1234" update="always">
            <comment>
            A test channel
            </comment>
        </channel>
        <channel id="102" name="stringchan" data_type="string" size = "10" abbrev="T0001-1234">
            <comment>
            A test channel
            </comment>
        </channel>
        <channel id="103" name="enumchan" data_type="ENUM" abbrev="T0001-1234">
                <enum name="SomeTlmEnum">
                    <item name="TLM_MEMB1"/>
                    <item name="TLM_MEMB2" value="7" comment="This member is important"/>
                    <item name="TLM_MEMB3" value="15"/>
                </enum>
            <comment>
            A test enum channel
            </comment>
        </channel>
    </telemetry>
    <parameters>
        <parameter id="100" set_opcode="0x200" save_opcode="0x201" name="someparam" data_type="U32" default="10">
            <comment>
            A test parameter
            </comment>
        </parameter>
        <parameter id="101" set_opcode="0x202" save_opcode="0x203" name="anotherparam" data_type="Example4::Example2">
            <comment>
            A test parameter
            </comment>
        </parameter>
        <parameter id="102" set_opcode="0x204" save_opcode="0x205" name="stringparam" data_type="string" size="11" default="DeepThought">
            <comment>
            A test parameter
            </comment>
        </parameter>
        <parameter id="103" set_opcode="0x206" save_opcode="0x207" name="enumparam" data_type="ENUM">
            <enum name="SomeParamEnum">
                <item name="PAR_MEMB1"/>
                <item name="PAR_MEMB2" value="7" comment="This member is important"/>
                <item name="PAR_MEMB3" value="15"/>
            </enum>
            <comment>
            A test parameter
            </comment>
        </parameter>
    </parameters>
    <events>
        <!-- A test event -->
        <event id="100" name="SomeEvent" severity="ACTIVITY_HI" format_string = "My Event %d %f %s %s %d" >
            <comment>
            A test event
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 event argument</comment>
                </arg>
                <arg name="arg2" type="F32">
                    <comment>The F32 event argument</comment>
                </arg>
                <arg name="arg3" type="Example4::Example2">
                    <comment>The Example4 event argument</comment>
                </arg>
                <arg name="arg4" type="string" size="12">
                    <comment>The string event argument</comment>
                </arg>
                <arg name="arg5" type="ENUM">
                    <enum name="SomeEventEnum">
                        <item name="EVENT_MEMB1"/>
                        <item name="EVENT_MEMB2" value="7" comment="This member is important"/>
                        <item name="EVENT_MEMB3" value="15"/>
                    </enum>
                    <comment>The enum event argument</comment>
                </arg>
            </args>
        </event>
    </events>
    <internal_interfaces>
        <internal_interface name="test" priority="1" full="drop">
            <comment>
            A test interface
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 interface argument</comment>
                </arg>
                <arg name="arg2" type="F32">
                    <comment>The F32 interface argument</comment>
                </arg>
                <arg name="arg3" type="U8">
                    <comment>The U8 interface argument</comment>
                </arg>
            </args>
        </internal_interface>
        <internal_interface name="test2" priority="1">
            <comment>
            A test interface
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 interface argument</comment>
                </arg>
                <arg name="arg2" type="ENUM">
                    <enum name="SomeEnum">
                        <item name="MEM1"/>
                        <item name="MEM2" value="8" comment="This has value 8"/>
                        <item name="MEM3" value="15"/>
                    </enum>
                    <comment>The ENUM argument</comment>
                </arg>
                <arg name="arg3" type="string" size="15">
                    <comment>A string argument</comment>
                </arg>
                <arg name="arg4" type="Example4::Example2">
                    <comment>The Example4 interface argument</comment>
                </arg>
            </args>
        </internal_interface>
    </internal_interfaces>
</component>
