<?xml version="1.0" encoding="UTF-8"?>

<!-- Note: sync attribute can be sync, async, or guarded. Only for input />
   Note: priority attribute can be high, medium, low or interrupt.
         Only valid for active components input.
   Note  kind attribute of component can be ether active or passive.
         -->
<component name="TestCommand" kind="active" namespace="StressTest">
    <import_port_type>Autocoders/Python/test/stress/TestPortAi.xml</import_port_type>
    <import_port_type>Autocoders/Python/test/stress/Test2PortAi.xml</import_port_type>
    <import_serializable_type>Autocoders/Python/test/stress/QuaternionSerializableAi.xml</import_serializable_type>
    <comment>A stressfull component</comment>
    <ports>
        <port name="aport" data_type="Another::Test" kind="guarded_input" max_number="$max_aports">
            <comment>
            A test port
            </comment>
        </port>
        <port name="aport2" data_type="Somewhere::Test2" kind="async_input" priority="2" >
            <comment>
            Another port
            </comment>
        </port>
    </ports>
    <commands opcode_base="$comp_opcode_base">
        <!-- Input test command -->
        <command kind="async" opcode="0x100" mnemonic="TEST_CMD_1" priority="1">
            <comment>
            A test command
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 command argument</comment>
                </arg>
                <arg name="arg2" type="ENUM">
                    <enum name="SomeEnum">
                        <item name="MEMB1"/>
                        <item name="MEMB2" value="7" comment="This member is important"/>
                        <item name="MEMB3" value="15"/>
                    </enum>
                    <comment>The ENUM argument</comment>
                </arg>
             </args>
        </command>
        <command kind="sync" opcode="0x101" mnemonic="TEST_CMD_2" >
            <comment>
            A test command
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 command argument</comment>
                </arg>
                <arg name="arg2" type="F32">
                    <comment>A float argument</comment>
                </arg>
             </args>
        </command>
    </commands>
    <telemetry telemetry_base="$comp_telemetry_base">
        <channel id="100" name="somechan" data_type="U32">
            <comment>
            A test channel
            </comment>
        </channel>
        <channel id="101" name="AQuat" data_type="Ref::Gnc::Quaternion">
            <comment>
            A test channel
            </comment>
        </channel>
    </telemetry>
    <events event_base="$comp_event_base">
        <!-- A test event -->
        <event id="100" name="SomeEvent" severity="ACTIVITY_LO" format_string = "My Event %d %f %c"  >
            <comment>
            A test event
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 command argument</comment>
                </arg>
                <arg name="arg2" type="F32">
                    <comment>The F32 command argument</comment>
                </arg>
                <arg name="arg3" type="U8">
                    <comment>The U8 command argument</comment>
                </arg>
            </args>
        </event>
        <event id="101" name="AnotherEvent" severity="WARNING_HI" format_string = "Another Event %d %f %s" >
            <comment>
            A test event
            </comment>
            <args>
                <arg name="arg1" type="I32">
                    <comment>The I32 command argument</comment>
                </arg>
                <arg name="arg2" type="F32">
                    <comment>The F32 command argument</comment>
                </arg>
                <arg name="arg3" type="Ref::Gnc::Quaternion">
                    <comment>The U8 command argument</comment>
                </arg>
            </args>
        </event>
    </events>
    <parameters parameter_base="$comp_parameter_base" opcode_base="$comp_opcode_base">
        <parameter id="100" name="someparam" data_type="U32" default="10" set_opcode="0x102" save_opcode="0x103">
            <comment>
            A test parameter
            </comment>
        </parameter>
        <parameter id="101" name="AQuat" data_type="Ref::Gnc::Quaternion" set_opcode="0x104" save_opcode="0x105">
            <comment>
            A test parameter
            </comment>
        </parameter>
    </parameters>
</component>

