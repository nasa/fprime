<dictionary topology="TestTopology">
  <enums>
    <enum type="Ref::PacketStat::PacketStatus::PacketRecvStatus">
      <item name="PACKET_STATE_NO_PACKETS" value="0"/>
      <item name="PACKET_STATE_OK" value="1"/>
      <item name="PACKET_STATE_ERRORS" value="3" description="Receiver has seen errors"/>
    </enum>
    <enum type="TestComponent::arg1::enum1">
      <item name="item1" value="0"/>
      <item name="item2" value="1"/>
    </enum>
  </enums>
  <serializables>
    <serializable type="Ref::PacketStat">
      <members>
        <member name="BuffRecv" format_specifier="%u" description="Number of buffers received" type="U32"/>
        <member name="BuffErr" format_specifier="%u" description="Number of buffers received with errors" type="U32"/>
        <member name="PacketStatus" format_specifier="%d" description="Packet Status" type="Ref::PacketStat::PacketStatus::PacketRecvStatus"/>
      </members>
    </serializable>
  </serializables>
  <commands>
    <command component="Inst1" mnemonic="Test_Cmd0" opcode="0x111">
      <args>
        <arg name="arg1" type="I32"/>
        <arg name="arg2" type="Ref::PacketStat"/>
        <arg name="arg3" type="U8"/>
      </args>
    </command>
    <command component="Inst1" mnemonic="Test_Cmd1" opcode="0x1">
      <args>
        <arg name="arg1" len="40" type="string"/>
      </args>
    </command>
    <command component="Inst1" mnemonic="Test_Cmd2" opcode="0x2">
      <args/>
    </command>
    <command component="Inst1" mnemonic="Test_Cmd3" opcode="0x3">
      <args>
        <arg name="arg1" type="TestComponent::arg1::enum1"/>
      </args>
    </command>
    <command component="Inst2" mnemonic="Test_Cmd0" opcode="0x125">
      <args>
        <arg name="arg1" type="I32"/>
        <arg name="arg2" type="Ref::PacketStat"/>
        <arg name="arg3" type="U8"/>
      </args>
    </command>
    <command component="Inst2" mnemonic="Test_Cmd1" opcode="0x15">
      <args>
        <arg name="arg1" len="40" type="string"/>
      </args>
    </command>
    <command component="Inst2" mnemonic="Test_Cmd2" opcode="0x16">
      <args/>
    </command>
    <command component="Inst2" mnemonic="Test_Cmd3" opcode="0x17">
      <args>
        <arg name="arg1" type="TestComponent::arg1::enum1"/>
      </args>
    </command>
  </commands>
  <events>
    <event component="Inst1" name="Test_Evr0" id="0x1" severity="DIAGNOSTIC" format_string="Arg1 %s">
      <args>
        <arg name="arg1" len="256" type="string"/>
      </args>
    </event>
    <event component="Inst1" name="Test_Evr1" id="0x2" severity="WARNING_HI" format_string="Arg1 %d Arg2 %s">
      <args>
        <arg name="arg1" type="U32"/>
        <arg name="arg2" len="256" type="string"/>
      </args>
    </event>
    <event component="Inst1" name="Test_Evr2" id="0x3" severity="WARNING_HI" format_string="Arg1 %s Arg2 %d">
      <args>
        <arg name="arg1" len="256" type="string"/>
        <arg name="arg2" type="U32"/>
      </args>
    </event>
    <event component="Inst2" name="Test_Evr0" id="0x15" severity="DIAGNOSTIC" format_string="Arg1 %s">
      <args>
        <arg name="arg1" len="256" type="string"/>
      </args>
    </event>
    <event component="Inst2" name="Test_Evr1" id="0x16" severity="WARNING_HI" format_string="Arg1 %d Arg2 %s">
      <args>
        <arg name="arg1" type="U32"/>
        <arg name="arg2" len="256" type="string"/>
      </args>
    </event>
    <event component="Inst2" name="Test_Evr2" id="0x17" severity="WARNING_HI" format_string="Arg1 %s Arg2 %d">
      <args>
        <arg name="arg1" len="256" type="string"/>
        <arg name="arg2" type="U32"/>
      </args>
    </event>
  </events>
  <channels>
    <channel component="Inst1" name="Test_Tlm0" id="0x1" description="Test Tlm" type="U32"/>
    <channel component="Inst2" name="Test_Tlm0" id="0x15" description="Test Tlm" type="U32"/>
  </channels>
  <parameters/>
</dictionary>
