This contains the MagicDraw Plugin for the Component Autocoder:

To install this plugin:
 - copy the files 'FpCompAuto.jar' and 'plugin.xml' and directory 'lib' found in this directory into the MagicDraw installation plugin directory:
ie /Applications/MagicDraw_UML_17.2/plugins/gov.nasa.jpl.magicdraw.componentAutocoder.
 - This can also be done by typing "make install MD_INSTALL_LOC=<path to MagicDraw install directory>"

```
cp -r plugin.xml FpCompAuto.jar lib /Applications/MagicDraw_UML_17.2/plugins/gov.nasa.jpl.magicdraw.componentAutocoder
```

To rebuild the plugin from the command line:
- Run 'make' in this directory. This will generate or re-generate a file 'FpCompAuto.jar' that contains the plugin.
- Copy 'FpCompAuto.jar' to 'FpCompAuto.jar' as described above.

To run the plugin in MagicDraw:
- Run MagicDraw - you should see a 'Component Autocoder' tab next to the 'Help' tab
- Open your Component SysML model
- Open a Windows Messages window
- Pull down the 'Component Autocoder' tab and click on 'Auto Generate Component/Port/Topology XML
- Check the Messages Window for a list of all the Components, Ports and Subsystem XML's that are generated and the location of where they are generated.

To add a new Model: ex FatalEvent port
- New SysML Project ex: Fatal
- New Package ex: Fatal
- Use Model ISF-MD-Profile
- New PortType - FatalEvent
- Create ValueProperty - Id
- Export Pkg to New Module - FatalModule.mdxml

To run the JUnit test cases for exceptions:
- Open the MagicDraw project in Eclipse
- Set up a new JUnit run configuration for the TestISFExceptions class. The program arguments and VM arguments should be the same as before.
- Update the final String PLUGINDIR in the TestISFExceptions class so that it matches the directory for the plugin
- If a ClassNotFoundException is thrown, be sure to fix the build path in project properties
- The JUnit test suite should now run and all tests should pass

Documentation can be found in doc/html/index.html or in doc/refman.pdf

To regenerate the Documentation to conform with any future changes:
- Ensure Doxygen and Graphviz are installed for your machine
- Open Doxygen GUI
- In the 'File' tab at the top of the Doxygen GUI, choose open and select the file titled "Doxyfile"
- This will load all the configurations necessary to regenerate the documentation 
- Go to the 'Run' tab in the GUI and click the 'Run Doxygen' button to regenerate the documentation
- To regenerate the refman.pdf file found in the doc folder, open doc/rtf/refman.rtf, save as a Word Document, convert the document to PDF, then drag the PDF to the doc folder
- To edit the comments found in the top of the documentation files, edit the comment block found at the top of src/gov/nasa/jpl/componentaction/MainMenuConfigurator.java


Version 2.7:
-------------
- Add the subsystem name as a field in the <assembly> tag.  This allows the Autocoder to generate a unique name for each topology model.

Version 2.8:
--------------
- Add the "" around the <assembly name = "blah blah">.  This prevents the Component Autocoder complaining when parsing the XML.

Version 2.9:
--------------
- Add the <include_header> in the generated ComponentAi.xml.  This is for including a header file for the Internal interface serialized data.

Version 3.0:
--------------
- Update to MagicDraw 18.0 libraries for plugin.

version 3.1:
---------------
- Removed the "insert comment here" from the generated Port XML.

version 3.2:
---------------
- Add BaseID and Window parsing in the Subsystem and Component Instantiations for the Topology XML generation.

version 4.0:
---------------
- Added support for multiple subsystem.
- Added support for multiple instances of subsystems.

version 4.1:
---------------
- Fixed multiplicity bugs
- Fixed unit test issues
- Added buttons for generating components or topology XML files only

version 4.2:
---------------
- Added functionality for Cmd and CmdReg port types not needing indexes or multiplicities to be specified. This allows automatically finds each pair of cmd and cmd reg and generates the same source index. 

version 4.3:
---------------
- Added functionally for CmdSequenceCommands and CmdSequenceResponse to have their multiplicities be auto generated. 
- Added button that allows user to import a base id / window range config file which will add those ids to the model.
- Added simple tags to warning messages for easier human identification.

version 4.4
--------------
- Removed throwing an exception when the instances don't match the config csv file.  The reason being is that the ISF Reference model has some rogue instance that I could not remove.  This should be cleaned up in the next major refactoring of the code.

version 4.5
--------------
- Converted to Makefile based builds (Bocchino) and removed buggy sequence port autonumbering (Canham)
- Name of plug-in was changed to "FpCompAuto.jar" away from Eclipse project default name
- Added make target to install plug-in correctly

version 4.6
--------------
- Added plugin dependencies to plugin.xml for MagicDraw 18.5+ 
