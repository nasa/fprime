<?xml version="1.0" encoding="UTF-8"?>
<component name="SendBuff" kind="queued" namespace="Ref">
    <import_port_type>Drv/DataTypes/DataBufferPortAi.xml</import_port_type>
    <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
    <comment>A rate group active component with input and output scheduler ports</comment>
    <ports>
        <!-- Input scheduler port -->
        <port name="SchedIn" data_type="Sched" kind="sync_input" max_number="1">
            <comment>
            The rate group scheduler input
            </comment>
        </port>
    
        <!-- Output data buffer port -->
        <port name="Data" data_type="Drv::DataBuffer" kind="output" max_number="1">
            <comment>
            The data buffer output
            </comment>
        </port>
    </ports>
    <commands>
        <command kind="async" opcode="0" mnemonic="SB_START_PKTS">
            <comment>
            Command to start sending packets
            </comment>
        </command>
        <command kind="async" opcode="1" mnemonic="SB_INJECT_PKT_ERROR" >
            <comment>
            Send a bad packet
            </comment>
        </command>
        <command kind="async" opcode="2" mnemonic="SB_GEN_FATAL" >
            <comment>
            Generate a FATAL EVR
            </comment>
            <args>
                <arg name="arg1" type="U32">
                    <comment>First FATAL Argument</comment>
                </arg>          
                <arg name="arg2" type="U32">
                    <comment>Second FATAL Argument</comment>
                </arg>          
                <arg name="arg3" type="U32">
                    <comment>Third FATAL Argument</comment>
                </arg>          
             </args>
        </command>
        <command kind="async" opcode="3" mnemonic="SB_GEN_ASSERT" >
            <comment>
            Generate an ASSERT
            </comment>
            <args>
                <arg name="arg1" type="U32">
                    <comment>First ASSERT Argument</comment>
                </arg>          
                <arg name="arg2" type="U32">
                    <comment>Second ASSERT Argument</comment>
                </arg>          
                <arg name="arg3" type="U32">
                    <comment>Third ASSERT Argument</comment>
                </arg>          
                <arg name="arg4" type="U32">
                    <comment>Fourth ASSERT Argument</comment>
                </arg>          
                <arg name="arg5" type="U32">
                    <comment>Fifth ASSERT Argument</comment>
                </arg>          
                <arg name="arg6" type="U32">
                    <comment>Sixth ASSERT Argument</comment>
                </arg>          
             </args>
        </command>
    </commands>
    <telemetry>
        <channel id="0" name="PacketsSent" data_type="U64" abbrev="R001-0000">
            <comment>
            Number of packets sent
            </comment>
        </channel>
        <channel id="1" name="NumErrorsInjected" data_type="U32"  abbrev="R000-1000" update="on_change">
            <comment>
            Number of errors injected
            </comment>
        </channel>
        <channel id="2" name="Parameter3" data_type="U8" abbrev="R000-2000" update="on_change">
            <comment>
            Readback of Parameter3
            </comment>
        </channel>
        <channel id="3" name="Parameter4" data_type="F32" abbrev="R000-3000" update="on_change">
            <comment>
            Readback of Parameter4
            </comment>
        </channel>
        <channel id="4" name="SendState" data_type="ENUM" abbrev="R000-4000">
            <enum name="ActiveState">
                <item name="SEND_IDLE"/>
                <item name="SEND_ACTIVE"/>
            </enum>
            <comment>
            Readback of Parameter4
            </comment>
        </channel>
    </telemetry>
    <events>
        <event id="0" name="FirstPacketSent" severity="ACTIVITY_HI" format_string = "First packet ID %d received" >
            <comment>
            First packet send
            </comment>
            <args>
                <arg name="id" type="U32">
                    <comment>The ID argument</comment>
                </arg>          
            </args>
        </event>
        <event id="1" name="PacketErrorInserted" severity="WARNING_HI" format_string = "Inserted error in packet ID %d" >
            <comment>
            Packet checksum error
            </comment>
            <args>
                <arg name="id" type="U32">
                    <comment>The ID argument</comment>
                </arg>          
            </args>
        </event>
        <event id="2" name="BuffSendParameterUpdated" severity="ACTIVITY_LO" format_string = "BuffSend Parameter %d was updated" >
            <comment>
            Report parameter update
            </comment>
            <args>
                <arg name="id" type="U32">
                    <comment>The ID argument</comment>
                </arg>          
            </args>
        </event>
        <event id="3" name="SendBuffFatal" severity="FATAL" format_string = "Test Fatal: %d %d %d" >
            <comment>
            A test FATAL
            </comment>
            <args>
                <arg name="arg1" type="U32">
                    <comment>First FATAL argument</comment>
                </arg>          
                <arg name="arg2" type="U32">
                    <comment>Second FATAL argument</comment>
                </arg>          
                <arg name="arg3" type="U32">
                    <comment>Second FATAL argument</comment>
                </arg>          
            </args>
        </event>
    </events>
    <parameters>
        <parameter id="0" set_opcode="10" save_opcode="11" name="parameter3" data_type="U8" default="12">
            <comment>
            A test parameter
            </comment>
        </parameter>
        <parameter id="1" set_opcode="12" save_opcode="13" name="parameter4" data_type="F32" default="13.14">
            <comment>
            A test parameter
            </comment>
        </parameter>
    </parameters>    
    
</component>

