<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
SignalGenComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Ref" name="SignalGen" kind="queued">

  <comment>
  A component for generating periodic signals
  </comment>

  <import_array_type>Ref/SignalGen/SignalPairSetArrayAi.xml</import_array_type>
  <import_array_type>Ref/SignalGen/SignalSetArrayAi.xml</import_array_type>
  <import_enum_type>Ref/SignalGen/SignalTypeEnumAi.xml</import_enum_type>
  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
  <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
  <import_serializable_type>Ref/SignalGen/SignalInfoSerializableAi.xml</import_serializable_type>
  <import_serializable_type>Ref/SignalGen/SignalPairSerializableAi.xml</import_serializable_type>

  <ports>
    <port name="cmdIn" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1">
      <comment>
      Command received port
      </comment>
    </port>
    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1">
      <comment>
      Command registration port
      </comment>
    </port>
    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1">
      <comment>
      Command response port
      </comment>
    </port>
    <port name="logOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Event port
      </comment>
    </port>
    <port name="logTextOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Text event port
      </comment>
    </port>
    <port name="schedIn" data_type="Svc::Sched" kind="sync_input" max_number="1"/>
    <port name="timeCaller" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Time get port
      </comment>
    </port>
    <port name="tlmOut" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1">
      <comment>
      Telemetry port
      </comment>
    </port>
  </ports>

  <commands>
    <command kind="async" opcode="0x0" mnemonic="SignalGen_Settings" full="assert">
      <comment>
      Signal Generator Settings
      </comment>
      <args>
        <arg name="Frequency" type="U32"/>
        <arg name="Amplitude" type="F32"/>
        <arg name="Phase" type="F32"/>
        <arg name="SigType" type="Ref::SignalType"/>
      </args>
    </command>
    <command kind="async" opcode="0x1" mnemonic="SignalGen_Toggle" full="assert">
      <comment>
      Toggle Signal Generator On/Off.
      </comment>
    </command>
    <command kind="async" opcode="0x2" mnemonic="SignalGen_Skip" full="assert">
      <comment>
      Skip next sample
      </comment>
    </command>
  </commands>

  <events>
    <event id="0x0" name="SignalGen_SettingsChanged" severity="ACTIVITY_LO" format_string="Set Frequency(Hz) %u, Amplitude %f, Phase %f, Signal Type %s">
      <comment>
      Signal Generator Settings Changed
      </comment>
      <args>
        <arg name="Frequency" type="U32"/>
        <arg name="Amplitude" type="F32"/>
        <arg name="Phase" type="F32"/>
        <arg name="SignalType" type="Ref::SignalType"/>
      </args>
    </event>
  </events>

  <telemetry>
    <channel id="0x0" name="Type" data_type="Ref::SignalType" update="always">
      <comment>
      Type of the output signal: SINE, TRIANGLE, etc.
      </comment>
    </channel>
    <channel id="0x1" name="Output" data_type="F32" update="always" format_string="%.4f">
      <comment>
      Single Y value of the output
      </comment>
    </channel>
    <channel id="0x2" name="PairOutput" data_type="Ref::SignalPair" update="always">
      <comment>
      Single (time, value) pair of the signal
      </comment>
    </channel>
    <channel id="0x3" name="History" data_type="Ref::SignalSet" update="always">
      <comment>
      Last 10 Y values of the signal
      </comment>
    </channel>
    <channel id="0x4" name="PairHistory" data_type="Ref::SignalPairSet" update="always">
      <comment>
      Last 10 (time, value) pairs of the signal
      </comment>
    </channel>
    <channel id="0x5" name="Info" data_type="Ref::SignalInfo" update="always">
      <comment>
      Composite field of signal information, containing histories, pairs etc
      </comment>
    </channel>
  </telemetry>

</component>
