# This workflow is intended for reuse by other workflows and will not run directly (no triggers).
# The behavior is to build an external F´ project (e.g. fprime-community/system-reference) using
# the current F´ version.
name: 'F´ Project Builder - Reusable Workflow'

on:
  workflow_call:
    inputs:
      build_location:
        description: "Path to F´ module to build. E.g. MyDeployment/"
        type: string
        required: true
      target_repository:
        required: true
        type: string
        description: "Additional external repository to checkout (<owner>/<repo>)"
      run_unit_tests:
        description: "Run an additional job in parallel to run unit tests."
        type: boolean
        required: false
        default: true
      run_integration_tests:
        description: "Run an additional job in parallel to run unit tests."
        type: boolean
        required: false
        default: false
      fprime_location:
        required: false
        type: string
        description: "Relative path from the extenal project root to its F´ submodule"
        default: "./fprime"
      runs_on:
        required: false
        type: string
        description: "Platform to run on. Defaults to ubuntu-latest"
        default: "ubuntu-latest"

jobs:
  build:
    runs-on: ${{ inputs.runs_on }}
    name: "Build F´ Project"
    steps:
      - name: "Checkout target repository"
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: ${{ inputs.target_repository }}
      - name: "Overlay current F´ revision"
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ${{ inputs.fprime_location }}
      - name: "Install requirements.txt"
        run: |
          pip3 install -r ${{ inputs.fprime_location }}/requirements.txt
        shell: bash
      - name: "Build Project"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util generate
          fprime-util build
        shell: bash
      - if: ${{ inputs.run_integration_tests }}
        working-directory: ${{ inputs.build_location }}
        run: pytest 
        shell: bash

  runUT:
    if: ${{ inputs.run_unit_tests }}
    runs-on: ${{ inputs.runs_on }}
    name: "Run Unit Tests"
    steps:
      - name: "Checkout target repository"
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: ${{ inputs.target_repository }}
      - name: "Overlay current F´ revision"
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ${{ inputs.fprime_location }}
      - name: "Install requirements.txt"
        run: |
          pip3 install -r ${{ inputs.fprime_location }}/requirements.txt
        shell: bash
      - name: "Buld and Run Unit Tests"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util generate --ut
          fprime-util build --ut
          fprime-util check
        shell: bash

